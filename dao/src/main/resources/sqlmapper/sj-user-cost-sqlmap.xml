<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="userCostMap" >
  <resultMap id="sjUserCostMap" type="com.quancheng.achilles.dao.model.SJUserCost" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="current_value" property="currentValue" jdbcType="VARCHAR" />
    <result column="happen_date" property="happenDate" jdbcType="VARCHAR" />
    <result column="data_type" property="dataType" jdbcType="VARCHAR" />
    <result column="last_month_than" property="lastMonthThan" jdbcType="DECIMAL" />
  </resultMap>
  
  <resultMap id="sjUserCostCityMap" type="com.quancheng.achilles.dao.model.SJUserCostCity" extends="sjUserCostMap" >
    <result column="city" property="city" jdbcType="VARCHAR" />
  </resultMap>
  <update id="sjUserCountLastMonth" parameterType="map">
      INSERT into sj_user_cost( id ,client_id ,current_value,happen_date,data_type,last_month_than)
   	 <include refid="sjUserCountLastMonthQuerySql" /> 
   </update>
   <select id="sjUserCountLastMonthQuery" parameterType="map" resultMap="sjUserCostMap">
   	  select * from sj_user_cost o  where  1=1 
   	  <if test="clientId !=null and clientId !=''">
            and  o.client_id = #{clientId}
	</if>
	<if test="happenDate !=null and happenDate !=''">
            and  o.happen_date = #{happenDate}
	</if>
   </select>
  <sql id="sjUserCountLastMonthQuerySql">
  	  SELECT 
        uuid() as id,
        user_info.cid as client_id,
        user_info.current_value,
        #{data_current_date} as happen_date ,
        '注册用户' as data_type,
        CASE WHEN 
                    suc.current_value IS NOT NULL 
                        THEN ROUND((user_info.current_value-suc.current_value)*100/suc.current_value,2)  
                    ELSE 0.0 END
                        AS last_month_than
    FROM (
        SELECT 
            t.cid ,
            count(distinct t.uid) as current_value
        FROM 
            16860_member t
        WHERE 
            t.created_at  &lt; str_to_date(#{date_end} ,'%Y-%m-%d')  AND t.deleted_at IS NULL
        GROUP BY t.cid
    ) user_info
    LEFT JOIN 
        sj_user_cost suc 
            ON user_info.cid=suc.client_id AND suc.happen_date=#{data_last_date} and suc.data_type='注册用户'
  </sql>
  	
  	<sql id="sjActiveUserCountLastMonthQuerySql">
  		 SELECT 
            uuid() as id,
            order_info.client_id,
            order_info.current_value as current_value,
            #{data_current_date} as happen_date,
            '活跃用户' ,
            CASE WHEN suc.current_value is not null 
                THEN ROUND((order_info.current_value-suc.current_value)*100/suc.current_value,2)  
                ELSE 0.0 END AS last_month_than
        FROM (
            SELECT 
                o.client_id,
                COUNT(DISTINCT user_id) AS  current_value
            FROM 
                quancheng_db.`v_inn_sj_order_had_payment` `o`
            WHERE  `o`.`pay_at` 
                    BETWEEN STR_TO_DATE(#{date_begin},'%Y-%m-%d') AND STR_TO_DATE(#{date_end},'%Y-%m-%d')
                    <if test="clientId !=null and clientId !=''">
		                and  o.client_id = #{clientId}
		        		</if>
            GROUP BY o.client_id) order_info 
        LEFT JOIN 
            sj_user_cost suc ON suc.client_id =order_info.client_id AND suc.happen_date=#{data_last_date} and suc.data_type='活跃用户'
  	</sql>
    <update id="sjActiveUserCountLastMonth" parameterType="map">
        INSERT INTO sj_user_cost( id ,client_id ,current_value,happen_date,data_type,last_month_than)
       <include refid="sjActiveUserCountLastMonthQuerySql"/>
  </update>
  
  <sql id="sjPaymentOrderCountLastMonthQuerySql">
  	 SELECT 
            uuid() as id,
            order_info.client_id,
            order_info.current_value as current_value,
            #{data_current_date} as happen_date,
            '已支付订单数' as data_type,
            CASE WHEN suc.current_value is not null 
                THEN ROUND((order_info.current_value-suc.current_value)*100/suc.current_value,2)  
                ELSE 0.0 END AS last_month_than
        FROM (
            SELECT 
                o.client_id,
                COUNT(1) AS  current_value
            FROM 
                quancheng_db.`v_inn_sj_order_had_payment` `o`
            WHERE  `o`.`pay_at` 
                    BETWEEN STR_TO_DATE(#{date_begin},'%Y-%m-%d') AND STR_TO_DATE(#{date_end},'%Y-%m-%d')
            GROUP BY o.client_id) order_info 
        LEFT JOIN 
            sj_user_cost suc ON suc.client_id =order_info.client_id AND suc.happen_date=#{data_last_date}  and suc.data_type='已支付订单数'
  </sql>
  <update id="sjPaymentOrderCountLastMonth" parameterType="map">
        INSERT INTO sj_user_cost( id ,client_id ,current_value,happen_date,data_type,last_month_than)
        <include refid="sjPaymentOrderCountLastMonthQuerySql"/>
  </update>
  
  <sql id="sjPaymentOrderMoneyLastMonthQuerySql">
  	   SELECT 
            uuid() as id,
            order_info.client_id,
            order_info.current_value as current_value,
            #{data_current_date} as happen_date,
            '消费金额' as data_type,
            CASE WHEN suc.current_value is not null 
                THEN ROUND((order_info.current_value-suc.current_value)*100/suc.current_value,2)  
                ELSE 0.0 END AS last_month_than
        FROM (
            SELECT 
                o.client_id,
                SUM(money) AS  current_value
            FROM 
                quancheng_db.`v_inn_sj_order_had_payment` `o`
            WHERE  `o`.`pay_at` 
                    BETWEEN STR_TO_DATE(#{date_begin},'%Y-%m-%d') AND STR_TO_DATE(#{date_end},'%Y-%m-%d')
                    <if test="clientId !=null and clientId !=''">
		                and  o.client_id = #{clientId}
		        		</if>
            GROUP BY o.client_id) order_info 
        LEFT JOIN 
            sj_user_cost suc ON suc.client_id =order_info.client_id AND suc.happen_date=#{data_last_date} and suc.data_type='消费金额'
  </sql>
  <update id="sjPaymentOrderMoneyLastMonth" parameterType="map">
        INSERT INTO sj_user_cost( id ,client_id ,current_value,happen_date,data_type,last_month_than)
        <include refid="sjPaymentOrderMoneyLastMonthQuerySql"/>
  </update>
  
  <sql id="sjCityPaymentOrderMoneyLastMonthQuerySql">
  	SELECT 
		uuid() as id,
		o.client_id,
	    reg.`name` as city,
		SUM(money) AS  current_value,
		'order_sum' as data_type,
	    #{data_current_date} as happen_date 
	FROM 
		quancheng_db.`v_inn_sj_order_had_payment` `o`
	    left join 16860_region reg on o.city_id = reg.id
	WHERE  `o`.`pay_at` 
			BETWEEN STR_TO_DATE(#{date_begin} ,'%Y-%m-%d') AND STR_TO_DATE(#{date_end},'%Y-%m-%d')
			<if test="clientId !=null and clientId !=''">
                and  o.client_id = #{clientId}
        		</if>
	GROUP BY o.client_id ,reg.`name`
  </sql>
  <select id="sjCityPaymentOrderMoneyLastMonthQuery"  parameterType="map"  resultMap="sjUserCostCityMap">
  		  select * from sj_user_cost_city o where  1=1 
	   	  <if test="clientId !=null and clientId !=''">
	            and  o.client_id = #{clientId}
		</if>
		<if test="happenDate !=null and happenDate !=''">
	            and  o.happen_date = #{happenDate}
		</if>
  </select>
  <update id="sjCityPaymentOrderMoneyLastMonth" parameterType="map">
  		insert into sj_user_cost_city(id,client_id,city,current_value,data_type,happen_date)
		<include refid="sjCityPaymentOrderMoneyLastMonthQuerySql"/>
  </update>
  
  <sql id="sjCityActiveUserCountLastMonthQuerySql">
  	SELECT 
		uuid() as id,
		o.client_id,
	    reg.`name` as city,
		COUNT(DISTINCT user_id) AS  current_value,
		'usercount' as data_type,
	    #{data_current_date} as happen_date
	FROM 
		quancheng_db.`v_inn_sj_order_had_payment` `o`
	    left join 16860_region reg on o.city_id = reg.id
	WHERE  `o`.`pay_at` 
			BETWEEN STR_TO_DATE(#{date_begin} ,'%Y-%m-%d') AND STR_TO_DATE(#{date_end},'%Y-%m-%d')
			<if test="clientId !=null and clientId !=''">
                and  o.client_id = #{clientId}
        		</if>
	GROUP BY o.client_id ,reg.`name`
  </sql>
  <update id="sjCityActiveUserCountLastMonth" parameterType="map">
  		insert into sj_user_cost_city(id,client_id,city,current_value,data_type,happen_date)
		<include refid="sjCityActiveUserCountLastMonthQuerySql"/>
  </update>
</mapper>